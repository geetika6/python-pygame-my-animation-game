resmed
Hey there,
Geetika here.
I would like to introduce myself a bit before going into further questions.
I did my masters in 2011 and have been since then working as a hardware engineeer in the ASIC industry in a mix of design and verification roles.
With my interests in programming, i started to work in areas where there was more of software,logical programming involved.Eventually i worked in various c, c++ and OS kernel related areas.I was lucky to get this opportunity.
Being from a hardware background gave\
+6= me an understanding of how software can be aptly developed on Embedded applications.


intro
hw interests in programming
responsibilites

wokring in team . sorting out issues faced by team, working on unified approach

going out of line and trying out automation
also learning new things like python 

breaking down problem into smaller tasks





Now moving on to my strengths ,
I have been a sincere person who has taken individual responsibilites in various roles.
In the inital stages, I used to just complete my tasks and be done with it, but then I started to be more involved , it was then that i started learning more.I used to try my best, explore how other people were working.I worked on learning industry standards and how my skills could be improved. 
Its given me immense satisfaction in completing an activity,Specially if you work from start.Its not that i have not made mistakes , but i have learned so much with those mistakes that it has helped in making me even more confident in meeting those challenges.


I have been working in various team sizes and have got a good understanding of how to interact well in team environment.
When you work in a team its really important to interact with other linked teams, or members in the same team so as to make a more feasible product.Not everyone has same thought process.sometimes people around were not convinced with what i thought of doing. In such cases its always benefical to do a pro-con analysis of the thought with all the team members and arrive at a common solution.I am fully aware of the need to realize the importance of other team members, after all we help each other whenver some person is finding it difficult to figure out things.Not everyone is good in all aspects, so its fair to use skills of everyone and keep learning.

I have always believed in going out of line to try and work on new things, like trying out software roles in my career since i had interest.
I have tried to come up with automation and scripts to tackle small daily  problems like manual execution of tasks, which has in many ways benefitted other members in my team and also other teams in my organization.Whenever i worked in such automation , i have realised that other people using it , have given valuable feedbacks that has increased my knowledge further.So i am more than ready to adapt to new changes and feedbacks given by peers.

I believe that its good to divide daily tasks , break down problem into smaller parts, prioritizing tasks.This tackles the problem of getting overwhelmed with tasks.
Its good to take small breaks while working on a bigger problem.


I did my own self study and worked on various skills like learning C++ ,getting to know about Operating Systems.I worked on small problems , developed code for it , and then would upload on my github account for my own later reference.Then i started working on my raspberry pi just to get a hang of how hardware things can be controlled by writing simple software application.Recently I started learning python to get more understanding of dynamic high level languages.


I believe Life is all about learning and evolving.


The second question about sharing my most interesting software project, just reminds me of a project on which i worked on in my last company.
It was application development for a Freescale chip for a graphical demo.This was a new thing for me, , as I have shared that i come from hardware background and had interests in software , but then actually working on a project is way more than that.
Earlier i used to Work on Enterprise tools ,and had limited know how of Linux , which scared me a bit.So when i saw how drivers interact with high level applications , I came across so many things like what exactly is an Operating system , how it interacts, schedules tasks.How memory is allocated and deallocated.The original application was just using callbacks to call the driver code , but since I was curious to know how things work on a lower level, I had to get my hands dirty in Linux. Eventually I worked on my own character driver to see how kernel operates and register driver modules.I feel its really important to know these lower level concepts to have a better debugging capability and suggest improvements realated to code optimizations.

Another thing about this project was that I could see how the code written on hardware which goes inside a chip is actually synthesized and used as a product.
When we see how a particular product look as a final physical entity its another feeling.
It like i can see how the user will be actually be using it, how thousands of hours spent in designing and verifying will actually generate a product.
So it gives a sense of happiness.




Its been a while since i completed my university.The most challenging part of college was definitely working on labs.Learning concepts like Digital Signal processing , electronics, software programming , all used different skill sets.When I used to learn about concepts it was many a times not very clear initially but when I used to actually implement it in lab . then was the time actual problems used to come.
Like there was a subject which required using Matlab to generate a transfer function of a low pass filter.I used to read in theory, understand just part of the whole things and used to think its done , but when I actually did various mathematical operations to implement it, it was not that easy , i felt.So unless we worked on physically implementing small projects in labs, all new concepts were very challenging.





helping to solve the customer queries by actually trying out 
